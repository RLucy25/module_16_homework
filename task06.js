/*Задание 6.

Создать Promise, в котором c задержкой в три секунды сгенерировать случайное целое число от 1 до 100.
Для создания задержки использовать setTimeout. Если сгенерированное число четное — Promise выполнится успешно (resolve),
если нечетное — выполнится с ошибкой (reject). После разрешения Promise обработать результат его выполнения 
и вывести сообщение в консоль:

«Завершено успешно. Сгенерированное число — number», если Promise завершился успешно. Вместо number подставить сгенерированное число
«Завершено с ошибкой. Сгенерированное число — number», если Promise завершился с ошибкой. Вместо number подставить сгенерированное число 
*/

function usePromise() {
  
let x = Math.random() * (100 - 0) + 0; //Генерируем случайное число в заданном диапазоне
x = Math.ceil(x); 

evenTest = x % 2;  //Проверка на четность
let flag = true;
  if (evenTest === 0){
    flag = true;    //Четное
    } else {
      flag = false; 
    };	//Нечетное

// Создаем promise
const myPromise = new Promise((resolve,reject) => { // С помощью класса promise создаем новый объект promise
  if (flag) {  
    resolve(`Завершено успешно. Сгенерированное число — ${x}`); //если с помощью флага выполним resolve, promise выполниться успешно
  } else {
    reject(`Завершено с ошибкой. Сгенерированное число — ${x}`); //иначе неуспешно
  }
});

// Выполняем promise
myPromise 
  .then((result) => {   //для успешной обработки promise есть обработчик then
    console.log('', result);
  })
  .catch((error) => {  //для неуспешной обработки promise есть обработчик catch
    console.log('', error);
  })
  .finally(() => {   //обработчик finally находится в конце и работает всегда
  });
};

setTimeout(usePromise, 3000);